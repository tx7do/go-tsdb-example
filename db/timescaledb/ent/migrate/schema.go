// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SensorColumns holds the columns for the "sensor" table.
	SensorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "INT", "postgres": "SERIAL"}},
		{Name: "type", Type: field.TypeString, Size: 50, Default: ""},
		{Name: "location", Type: field.TypeString, Size: 50, Default: ""},
	}
	// SensorTable holds the schema information for the "sensor" table.
	SensorTable = &schema.Table{
		Name:       "sensor",
		Columns:    SensorColumns,
		PrimaryKey: []*schema.Column{SensorColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "sensor_pkey",
				Unique:  false,
				Columns: []*schema.Column{SensorColumns[0]},
			},
		},
	}
	// SensorDataColumns holds the columns for the "sensor_data" table.
	SensorDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "time", Type: field.TypeTime, Nullable: true},
		{Name: "sensor_id", Type: field.TypeInt},
		{Name: "temperature", Type: field.TypeFloat64},
		{Name: "cpu", Type: field.TypeFloat64},
	}
	// SensorDataTable holds the schema information for the "sensor_data" table.
	SensorDataTable = &schema.Table{
		Name:       "sensor_data",
		Columns:    SensorDataColumns,
		PrimaryKey: []*schema.Column{SensorDataColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SensorTable,
		SensorDataTable,
	}
)

func init() {
	SensorTable.Annotation = &entsql.Annotation{
		Table:     "sensor",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
	SensorDataTable.Annotation = &entsql.Annotation{
		Table:     "sensor_data",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
}
